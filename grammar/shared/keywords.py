import interpretation

keywords = frozenset([
	'no',
	'not',
	'when',
	'if',
	'a',
	'the',
	'and',
	'or',
	'because',
	'unless',
	'except',
	'.',
	'is',
	'has'
	'can',
	'was',
	'with',
	'at',
	'from',
	'into',
	'during',
	'including',
	'until',
	'against',
	'among',
	'throughout',
	'towards',
	'upon',
	'concerning',
	'of',
	'to',
	'in',
	'for',
	'on',
	'by',
	'about',
	'like',
	'through',
	'over',
	'before',
	'between',
	'after',
	'without',
	'under',
	'within',
	'along',
	'following',
	'across',
	'behind',
	'beyond',
	'up',
	'out',
	'around',
	'down',
	'off',
	'above',
	'near',
])

class Expression(interpretation.Expression):
    def test(self, literal: str, position: int, state: 'State') -> bool:
    	return literal not in keywords and super().test(literal, position, state)
